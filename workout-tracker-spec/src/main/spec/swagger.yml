swagger: "2.0"
info:
  description: "This is the root specification document for Workout Tracker Application."
  version: "1.0.0"
  title: "Workout Tracker"
  termsOfService: "http://entrofi.net/terms"
  contact:
    email: "mail@mail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "entrofi.net"
basePath: "/v1"
tags:
- name: "workouts"
  description: "Everything about your workouts"
  externalDocs:
    description: "Find out more"
    url: "http://entrofi.net"
- name: "user"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://entrofi.net"
schemes:
- "http"
paths:
  /user/login:
      get:
        tags:
        - "user"
        summary: "Logs user into the system"
        description: ""
        operationId: "loginUser"
        produces:
        - "application/xml"
        - "application/json"
        parameters:
        - name: "username"
          in: "query"
          description: "The user name for login"
          required: true
          type: "string"
        - name: "password"
          in: "query"
          description: "The password for login in clear text"
          required: true
          type: "string"
        responses:
          200:
            description: "successful operation"
            schema:
              type: "string"
            headers:
              X-Rate-Limit:
                type: "integer"
                format: "int32"
                description: "calls per hour allowed by the user"
              X-Expires-After:
                type: "string"
                format: "date-time"
                description: "date in UTC when token expires"
          400:
            description: "Invalid username/password supplied"
  /user/logout:
    get:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /user/{username}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      description: ""
      operationId: "getUserByName"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
    put:
      tags:
      - "user"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: "This can only be done by the logged in user."
      operationId: "deleteUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be deleted"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"